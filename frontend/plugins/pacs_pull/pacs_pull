#!/usr/bin/env python
#
# PACS pull plugin for ChRIS reloaded
#
#  _ __   __ _  ___ ___   _ __  _   _| | |
# | '_ \ / _` |/ __/ __| | '_ \| | | | | |
# | |_) | (_| | (__\__ \ | |_) | |_| | | |
# | .__/ \__,_|\___|___/ | .__/ \__,_|_|_|
# |_|                    |_|              
#
#
#
# (c) 2012 Fetal-Neonatal Neuroimaging & Developmental Science Center
#                   Boston Children's Hospital
#
#              http://childrenshospital.org/FNNDSC/
#                        dev@babyMRI.org
#

# import the plugin.py superclass
import os, sys
sys.path.append(os.path.join(os.path.dirname(__file__), '../'))
from plugin import Plugin

# import subprocess
import subprocess
# import PACS_Pull configuration file
import config

class PACS_Pull(Plugin):
  '''
  '''
  Plugin.AUTHORS = 'FNNDSC (dev@babyMRI.org)'
  Plugin.TITLE = 'PACS_pull'
  Plugin.CATEGORY = 'PACS'
  Plugin.DESCRIPTION = 'Pull data from your PACS'
  Plugin.DOCUMENTATION = 'http://wiki'
  Plugin.LICENSE = 'Opensource (MIT)'
  Plugin.VERSION = '0.1'

  def run(self, options):
    # do whatever
    print 'running pacs pull...'
    # parse args
    print 'parsing arguments...'
    print config.dcmtk
    print config.aet
    print config.server
    print config.port
    feed_id = '790';
    current_dir = os.path.dirname(os.path.abspath(__file__))
    #print current_dir
    # preprocess!!
    
    print 'preprocessing...'
    # FEED ID IS AN ARGUMENT!
    # create data tables!
    # create patient!
    #    p = subprocess.Popen(["ls", "-als", "/"], stdout=subprocess.PIPE, cwd='/tmp')
    #    $user_id = $options['u'];
    #$feed_chris_id = $options['f'];
    #$details = $options['m'];
    #$server = $options['s'];
    #$port = $options['p'];
    #$aetitle = $options['a'];
    pre = subprocess.Popen(["pre_process.php", "-u Ellen", "-f 790", "-m 4524909 ", "-s " + config.server, "-p " + config.port, "-a " + config.aet], stdout=subprocess.PIPE, cwd=current_dir)
    pre_result = pre.communicate()[0]
    
    #print result

    # and process!!
    print 'processing...'
    pro = subprocess.Popen(["process.php", "-m 4524909 ", "-s " + config.server, "-p " + config.port, "-a " + config.aet], stdout=subprocess.PIPE, cwd=current_dir)
    pro_result = pro.communicate()[0]
    
    print pro_result;
    # generic process to support pacs_pull and dicom_dir_send!
    # ask pacs to move data!

    # postprocess
    print 'finished processing...'
    print 'should receive data from PACS shortly...'
    # FEED ID IS AN ARGUMENT!
    # listen.php ->postprocess.php
    # xinet.d daemon listening to incoming data from the pacs

# ENTRYPOINT
if __name__ == "__main__":
  plugin = PACS_Pull()
  plugin.add_parameter('Input', Plugin.IMAGE, '--t1', action='store', dest='T1', help='the T1 scan')
  plugin.add_parameter('Input', Plugin.IMAGE, '--dti', action='store', dest='DTI', help='the DTI scan')
  plugin.add_parameter('Advanced', Plugin.INTEGER, '--radius', action='store', default=3, dest='Radius', help='the look-around Radius')
  plugin.launch(sys.argv)
