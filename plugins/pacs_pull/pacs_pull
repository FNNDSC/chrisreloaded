#!/usr/bin/env python
#
# PACS pull plugin for ChRIS reloaded
#
#  _ __   __ _  ___ ___   _ __  _   _| | |
# | '_ \ / _` |/ __/ __| | '_ \| | | | | |
# | |_) | (_| | (__\__ \ | |_) | |_| | | |
# | .__/ \__,_|\___|___/ | .__/ \__,_|_|_|
# |_|                    |_|              
#
# (c) 2012 Fetal-Neonatal Neuroimaging & Developmental Science Center
#                   Boston Children's Hospital
#
#              http://childrenshospital.org/FNNDSC/
#                        dev@babyMRI.org
#

# import the plugin.py superclass
import os, sys
sys.path.append(os.path.join(os.path.dirname(__file__), '../'))
from plugin import Plugin

import datetime as d

class PACS_Pull(Plugin):
  '''
  '''
  Plugin.AUTHORS = 'FNNDSC (dev@babyMRI.org)'
  Plugin.TITLE = 'PACS_pull'
  Plugin.CATEGORY = 'PACS'
  Plugin.DESCRIPTION = 'Pull data from your PACS to our ChRIS server.'
  Plugin.DOCUMENTATION = 'http://wiki'
  Plugin.LICENSE = 'Opensource (MIT)'
  Plugin.VERSION = '0.1'

  def run(self, options):
    current_dir = os.path.dirname(os.path.abspath(__file__))
    
    print Plugin.TITLE
    print Plugin.VERSION

    # preprocess!!
    print '======================================='
    print  d.datetime.now().strftime("%Y-%m-%d %H:%M:%S") + ' ---> Start pre_processing...'
    pre_command = current_dir + "/pre_process.php -u " + options.USER_ID + " -f " + options.FEED_ID + " -m " + options.MRN + " -s " + options.SERVER_IP + " -p " + options.SERVER_PORT + " -a " + options.USER_AET  + " -o " + options.output
    print 'command:'
    print pre_command
    pre_output = os.system(pre_command)
    print 'output:'
    print pre_output
    
    # evaluate pre_processing step
    if pre_output == 0:
        print d.datetime.now().strftime("%Y-%m-%d %H:%M:%S") + ' ---> Pre_processing: SUCCESS'
        print '(see pre_process.log for more information)'
    else:
        print d.datetime.now().strftime("%Y-%m-%d %H:%M:%S") + ' ---> Pre_processing: FAILURE'
        print 'EXIT pacs_pull plugin NOW'
        print '(see pre_process.log for more information)'
        return
        
    # should return 0, if not, an issue occured, do not go to the next step
#
#    # process
#    print '======================================='
#    print  d.datetime.now().strftime("%Y-%m-%d %H:%M:%S") + ' ---> Start processing...'
#    pro_command = current_dir + "/process.php -m " + options.MRN + " -f " + options.FEED_ID + " -s " + options.SERVER_IP + " -p " + options.SERVER_PORT + " -a " + options.USER_AET  + " -o " + options.output
#    print 'command:'
#    print pro_command
#    pro_output = os.system(pro_command)
#    print 'output:'
#    print pro_output
#    
#    # evaluate processing step
#    if pro_output == 0:
#        print d.datetime.now().strftime("%Y-%m-%d %H:%M:%S") + ' ---> Processing: SUCCESS'
#        print '(see process.log for more information)'
#    else:
#        print d.datetime.now().strftime("%Y-%m-%d %H:%M:%S") + ' ---> Processing: FAILURE'
#        print 'EXIT pacs_pull plugin NOW'
#        print '(see process.log for more information)'
#        return
#    
#    # postprocess
#    print '======================================='
#    print  d.datetime.now().strftime("%Y-%m-%d %H:%M:%S") + ' ---> Start post_processing...'
#    post_command = current_dir + "/post_process.php -f " + options.FEED_ID + " -o " + options.output
#    print 'command:'
#    print post_command
#    post_output = os.system(post_command)
#    print 'output:'
#    print post_output
#    
#    # evaluate post_processing step
#    if post_output == 0:
#        print d.datetime.now().strftime("%Y-%m-%d %H:%M:%S") + ' ---> Post_processing: SUCCESS'
#        print '(see post_process.log for more information)'
#    else:
#        print d.datetime.now().strftime("%Y-%m-%d %H:%M:%S") + ' ---> Post_processing: FAILURE'
#        print 'EXIT pacs_pull plugin NOW'
#        print '(see post_process.log for more information)'
#        return


# ENTRYPOINT
if __name__ == "__main__":
  plugin = PACS_Pull()
  plugin.add_parameter('Input', Plugin.STRING, '--mrn', action='store', default='MRN', dest='MRN', help='MRN to be pulled')
  plugin.add_parameter('Input', Plugin.STRING, '--aet', action='store', default='AETITLE', dest='USER_AET', help='User AETitle')
  plugin.add_parameter('Advanced', Plugin.STRING, '--serverip', action='store', default='134.174.12.21', dest='SERVER_IP', help='Server IP')
  plugin.add_parameter('Advanced', Plugin.STRING, '--serverport', action='store', default='104', dest='SERVER_PORT', help='Server Port')
  plugin.add_parameter('HIDDEN', Plugin.STRING, '--feedid', action='store', default="{FEED_ID}", dest='FEED_ID', help='Feed ID')
  plugin.add_parameter('HIDDEN', Plugin.STRING, '--userid', action='store', default="{USER_ID}", dest='USER_ID', help='User ID')
  plugin.launch(sys.argv)
