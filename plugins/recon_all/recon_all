#!/usr/bin/env python
#
#                                                            _
# FREESURFER RECON ALL
#
# (c) 2012 Fetal-Neonatal Neuroimaging & Developmental Science Center
#                   Boston Children's Hospital
#
#              http://childrenshospital.org/FNNDSC/
#                        dev@babyMRI.org
#

# import the plugin.py superclass
import os, sys
sys.path.append( os.path.join( os.path.dirname( __file__ ), '../' ) )
from plugin import Plugin

class recon_all( Plugin ):
  '''
  '''
  Plugin.AUTHORS = 'FNNDSC (dev@babyMRI.org)'
  Plugin.TITLE = 'Freesurfer Recon-All'
  Plugin.CATEGORY = 'Freesurfer'
  Plugin.DESCRIPTION = 'Reconstruct a brain using Freesurfer'
  Plugin.DOCUMENTATION = 'http://wiki'
  Plugin.LICENSE = 'Opensource (MIT)'
  Plugin.VERSION = '0.1'

  def run( self, options ):

    current_dir = os.path.dirname( os.path.abspath( __file__ ) )

    # grab the first dicom input file
    files = [d for d in os.listdir( options.MRI ) if not os.path.isdir( d ) and os.path.splitext( d )[1] == '.dcm']
    if len( files ) > 0:
      # migrate data
      # create temp dir
      import tempfile, shutil, subprocess
      tempdir = tempfile.mkdtemp( 'free', 'surf', os.environ['ENV_CLUSTER_TMP_DIR'] )
      shutil.copytree( options.MRI, tempdir + '/MRI' )
      # create link for preview during running
      os.symlink( tempdir + '/MRI', options.output + '/Freesurfer' )
      
      # adjust permissions to tempdir + '/MRI' so that the chris user can view the contents
      os.chmod(tempdir, 0777)

      # launch recon-all
      cmd = 'cd ' + tempdir + '/MRI' + ';' + current_dir + '/reconall.wrapper -subject Freesurfer -i ' + os.path.join( tempdir + '/MRI', files[0] ) + ' -all -notalairach'
      print cmd
      os.system( cmd )

      # remove link
      os.unlink( options.output + '/Freesurfer' )

      # now copy the results back
      shutil.copytree( tempdir + '/MRI/Freesurfer', options.output + '/Freesurfer' )
      # and remove the temp dir
      shutil.rmtree( tempdir )

    else:
      print options.MRI + ' doesn\'t contain any *.dcm files'
      sys.exit( 0 )



# ENTRYPOINT
if __name__ == "__main__":
  plugin = recon_all()
  plugin.add_parameter( 'Input', Plugin.IMAGE, '--mri', action='store', dest='MRI', help='the mri scan to reconstruct' )
  plugin.launch( sys.argv )
