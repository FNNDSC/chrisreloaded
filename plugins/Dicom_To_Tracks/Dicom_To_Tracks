#!/usr/bin/env python
#
#                                                            _           
#   _                       _                               | |          
# _| |_  ____ _____  ____ _| |_ ___   ____  ____ _____ ____ | |__  _   _ 
#(_   _)/ ___|____ |/ ___|_   _) _ \ / _  |/ ___|____ |  _ \|  _ \| | | |
#  | |_| |   / ___ ( (___  | || |_| ( (_| | |   / ___ | |_| | | | | |_| |
#   \__)_|   \_____|\____)  \__)___/ \___ |_|   \_____|  __/|_| |_|\__  |
#                                   (_____|           |_|         (____/ 
#
# (c) 2012 Fetal-Neonatal Neuroimaging & Developmental Science Center
#                   Boston Children's Hospital
#
#              http://childrenshospital.org/FNNDSC/
#                        dev@babyMRI.org
#

# import the plugin.py superclass
import os, sys
sys.path.append(os.path.join(os.path.dirname(__file__), '../'))
from plugin import Plugin

class Dicom_To_Tracks(Plugin):
  '''
  '''
  Plugin.AUTHORS = 'FNNDSC (dev@babyMRI.org)'
  Plugin.TITLE = 'DICOM To Tracks'
  Plugin.CATEGORY = 'Diffusion'
  Plugin.DESCRIPTION = 'Generate .trk file from DTI images'
  Plugin.DOCUMENTATION = 'http://wiki'
  Plugin.LICENSE = 'Opensource (MIT)'
  Plugin.VERSION = '0.1'

  def run(self, options):

    current_dir = os.path.dirname(os.path.abspath(__file__))
    
    # grab the first dicom input file
    firstDicomFile = os.listdir(options.DTI)[0]
    # get stages to run
    stages = '';
    if options.stage1:
      stages += '1'
    if options.stage2:
      stages += '2'
    if options.stage3:
      stages += '4'
    if options.stage4:
      stages += '4'
    if options.stage5:
      stages += '5'
      
    os.system(current_dir + '/dcm2trk.wrapper --output ' + options.output + ' --dti ' + os.path.join(options.DTI, firstDicomFile) + ' --stages ' + stages + ' --m1 ' + options.m1 + ' --m1lowerthreshold ' + options.m1 - lower - threshold + ' --m1upperthreshold ' + options.m1 - upper - threshold + ' --anglethreshold ' + options.angle - threshold)

# ENTRYPOINT
if __name__ == "__main__":
  plugin = Dicom_To_Tracks()
  #inputs
  plugin.add_parameter('Input', Plugin.IMAGE, '--dti', action='store', dest='DTI', help='the dti scan')
  
  #stages to be run
  plugin.add_parameter('Advanced', Plugin.BOOLEAN, '--stage1', default = 'true', action='store', dest='stage1', help='Run stage 1')
  plugin.add_parameter('Advanced', Plugin.BOOLEAN, '--stage2', default = 'true', action='store', dest='stage2', help='Run stage 1')
  plugin.add_parameter('Advanced', Plugin.BOOLEAN, '--stage3', default = 'true', action='store', dest='stage3', help='Run stage 1')
  plugin.add_parameter('Advanced', Plugin.BOOLEAN, '--stage4', default = 'true', action='store', dest='stage4', help='Run stage 1')
  plugin.add_parameter('Advanced', Plugin.BOOLEAN, '--stage5', default = 'true', action='store', dest='stage5', help='Run stage 1')
  
    #other advanced parameters
  plugin.add_parameter('Advanced', Plugin.STRING, '--m1', default='DWI', action='store', dest='m1', help='Run stage 1')
  plugin.add_parameter('Advanced', Plugin.INTEGER, '--m1lowerthreshold', default = '0', action='store', dest='m1lowerthreshold', help='Run stage 1')
  plugin.add_parameter('Advanced', Plugin.INTEGER, '--m1upperthreshold', default = '1', action='store', dest='m1upperthreshold', help='Run stage 1')
  plugin.add_parameter('Advanced', Plugin.INTEGER, '--anglethreshold', default = '35', action='store', dest='anglethreshold', help='Run stage 1')
  
  plugin.launch(sys.argv)
