#!/usr/bin/env python
#
#      _       
#     (_)      
#  _____ _ __  
# |_  / | '_ \ 
#  / /| | |_) |
# /___|_| .__/ 
#       | |    
#       |_|    
#
# (c) 2014 Fetal-Neonatal Neuroimaging & Developmental Science Center
#                   Boston Children's Hospital
#
#              http://childrenshospital.org/FNNDSC/
#                        dev@babyMRI.org
#

# import the plugin.py superclass
import os, sys, stat
import tempfile, shutil, subprocess

sys.path.append(os.path.join(os.path.dirname(__file__), '../'))
sys.path.append(os.path.join(os.path.dirname(__file__), '../../lib'))
from  _common import crun
from  _common import systemMisc as misc 

sys.path.append(os.path.join(os.path.dirname(__file__), '../'))
from plugin import Plugin

class Zip(Plugin):
    '''
    '''
    Plugin.AUTHORS          = 'FNNDSC (dev@babyMRI.org)'
    Plugin.TITLE            = 'zip'
    Plugin.CATEGORY         = 'System'
    Plugin.DESCRIPTION      = 'zip (or unzip) data directory (or file)'
    Plugin.DOCUMENTATION    = 'http://wiki'
    Plugin.LICENSE          = 'Opensource (MIT)'
    Plugin.VERSION          = '0.1'

    def run(self):

        options = self.options
        if not options.unzip:
            zipname     = os.path.basename(options.input)
            cmd         = 'cd ' + os.path.dirname(options.input) + '; zip -r ' +  options.output + '/'  + zipname  + '.zip ' + zipname
            print(cmd)
            os.system(cmd)
        else:
            cmd         = 'cd ' + options.output + '; unzip ' + options.input
            print(cmd)
            os.system(cmd)

# ENTRYPOINT
if __name__ == "__main__":
    plugin = Zip()
    
    # list the inputs
    plugin.inputs = "--input"
    
    plugin.add_parameter( 'Input', Plugin.IMAGE, '--input', action='store', dest='input', help='the directory to zip' )
    plugin.add_parameter('Zip or Unzip', Plugin.BOOLEAN, '--unzip', default=False, action='store_true', dest='unzip', help='unzip archive')


    # plugin.status = 100 # no cluster job monitoring to mark a feed instantly as done
    plugin.launch()
