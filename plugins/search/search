#!/usr/bin/env python
#
# Search patient plugin for ChRIS reloaded
#
#                         _      
# ___  ___  __ _ _ __ ___| |__   
#/ __|/ _ \/ _` | '__/ __| '_ \  
#\__ \  __/ (_| | | | (__| | | | 
#|___/\___|\__,_|_|  \___|_| |_| 
#                                
#
# (c) 2012 Fetal-Neonatal Neuroimaging & Developmental Science Center
#                   Boston Children's Hospital
#
#              http://childrenshospital.org/FNNDSC/
#                        dev@babyMRI.org
#

# import the plugin.py superclass
import os, sys
sys.path.append(os.path.join(os.path.dirname(__file__), '../'))
from plugin import Plugin

import datetime as d

class search(Plugin):
  '''
  '''
  Plugin.AUTHORS = 'FNNDSC Dev Team (dev@babyMRI.org)'
  Plugin.TITLE = 'Search'
  Plugin.CATEGORY = 'System'
  Plugin.DESCRIPTION = '''
  Search for a match in the database.<br/>
  It returns all data-sets that match the input field.<br/>
  Supports multiple string search.<br/>
  We compare the search string to:
  <ul>
  <li><b>Patient:</b> Name, DOB (yyyy-mm-dd), MRN, Sex, Age</li>
  <li><b>Series:</b> Description, Location, Modality, Date (yyyy-mm-dd)</li>
  </ul>
  <b>Example</b><br/>
  <b>Search: <i>432334 654423</i></b> will return all matches for first OR second string<br/>
  <b>Search: <i>1982</i></b> will return patients born in <i>1982</i>, patient whose MRN contains <i>1982</i>, series where description contains <i>1982</i><br/>
  <b>Search: <i>MR CT</i></b> will return patients whose name contains <i>MR</i>, series where description contains <i>MR</i>, series where modality contains <i>MR</i>
 '''
  
  Plugin.DOCUMENTATION = 'https://github.com/FNNDSC/chrisreloaded/wiki/Plugin-search'
  Plugin.LICENSE = 'Opensource (MIT)'
  Plugin.VERSION = '0.3'

  def run(self, options):
    current_dir = os.path.dirname(os.path.abspath(__file__))
    
    print Plugin.TITLE
    print Plugin.VERSION

    # split search string on spaces
    sList = options.Search.strip().split();
    
    if not sList:
        sList.append('');

    for s in sList:
      # go!!
      print '======================================='
      print  d.datetime.now().strftime("%Y-%m-%d %H:%M:%S") + ' ---> Start DB search...'
      print  'Search String: ' + s
      search_command = current_dir + "/search.php"
      #output directory
      search_command += " -o " + options.output
      search_command += " -i " + s
      print 'command:'
      print search_command
      search_output = os.system(search_command)
      print 'output:'
      print search_output
    
      # evaluate pre_processing step
      # should return 0, if not, an issue occured, do not go to the next step
      if search_output == 0:
          print d.datetime.now().strftime("%Y-%m-%d %H:%M:%S") + ' ---> DB search: SUCCESS'
          print 'EXIT search plugin NOW'
          print '(see search.log for more information)'
      else:
          print d.datetime.now().strftime("%Y-%m-%d %H:%M:%S") + ' ---> DB search: FAILURE'
          print 'EXIT search plugin NOW'
          print '(see pre_process.log for more information)'
          return
        

# ENTRYPOINT
if __name__ == "__main__":
  plugin = search()
  
  plugin.add_parameter('Search', Plugin.STRING, '--search', action='store', default='', dest='Search', help='String to search on')
  
  plugin.launch(sys.argv)
